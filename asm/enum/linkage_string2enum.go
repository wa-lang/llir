// Code generated by "string2enum -linecomment -type Linkage ../../ir/enum"; DO NOT EDIT.

package enum

import (
	"fmt"

	"github.com/llir/llvm/ir/enum"
)

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the string2enum command to generate them again.
	var x [1]struct{}
	_ = x[enum.LinkageNone-0]
	_ = x[enum.LinkageAppending-1]
	_ = x[enum.LinkageAvailableExternally-2]
	_ = x[enum.LinkageCommon-3]
	_ = x[enum.LinkageInternal-4]
	_ = x[enum.LinkageLinkOnce-5]
	_ = x[enum.LinkageLinkOnceODR-6]
	_ = x[enum.LinkagePrivate-7]
	_ = x[enum.LinkageWeak-8]
	_ = x[enum.LinkageWeakODR-9]
	_ = x[enum.LinkageExternal-10]
	_ = x[enum.LinkageExternWeak-11]
}

const _Linkage_name = "noneappendingavailable_externallycommoninternallinkoncelinkonce_odrprivateweakweak_odrexternalextern_weak"

var _Linkage_index = [...]uint8{0, 4, 13, 33, 39, 47, 55, 67, 74, 78, 86, 94, 105}

// LinkageFromString returns the Linkage enum corresponding to s.
func LinkageFromString(s string) enum.Linkage {
	if len(s) == 0 {
		return 0
	}
	for i := range _Linkage_index[:len(_Linkage_index)-1] {
		if s == _Linkage_name[_Linkage_index[i]:_Linkage_index[i+1]] {
			return enum.Linkage(i)
		}
	}
	panic(fmt.Errorf("unable to locate Linkage enum corresponding to %q", s))
}
