// Code generated by "string2enum -linecomment -type DwarfMacinfo ../../ir/enum"; DO NOT EDIT.

package enum

import (
	"fmt"

	"github.com/llir/llvm/ir/enum"
)

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the string2enum command to generate them again.
	var x [1]struct{}
	_ = x[enum.DwarfMacinfoDefine-1]
	_ = x[enum.DwarfMacinfoUndef-2]
	_ = x[enum.DwarfMacinfoStartFile-3]
	_ = x[enum.DwarfMacinfoEndFile-4]
	_ = x[enum.DwarfMacinfoVendorExt-255]
}

const (
	_DwarfMacinfo_name_0 = "DW_MACINFO_defineDW_MACINFO_undefDW_MACINFO_start_fileDW_MACINFO_end_file"
	_DwarfMacinfo_name_1 = "DW_MACINFO_vendor_ext"
)

var (
	_DwarfMacinfo_index_0 = [...]uint8{0, 17, 33, 54, 73}
)

// DwarfMacinfoFromString returns the DwarfMacinfo enum corresponding to s.
func DwarfMacinfoFromString(s string) enum.DwarfMacinfo {
	if len(s) == 0 {
		return 0
	}
	for i := range _DwarfMacinfo_index_0[:len(_DwarfMacinfo_index_0)-1] {
		if s == _DwarfMacinfo_name_0[_DwarfMacinfo_index_0[i]:_DwarfMacinfo_index_0[i+1]] {
			return enum.DwarfMacinfo(i + 1)
		}
	}
	if s == _DwarfMacinfo_name_1 {
		return enum.DwarfMacinfo(255)
	}
	panic(fmt.Errorf("unable to locate DwarfMacinfo enum corresponding to %q", s))
}
