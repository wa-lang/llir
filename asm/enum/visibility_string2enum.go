// Code generated by "string2enum -linecomment -type Visibility ../../ir/enum"; DO NOT EDIT.

package enum

import (
	"fmt"

	"github.com/llir/llvm/ir/enum"
)

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the string2enum command to generate them again.
	var x [1]struct{}
	_ = x[enum.VisibilityNone-0]
	_ = x[enum.VisibilityDefault-1]
	_ = x[enum.VisibilityHidden-2]
	_ = x[enum.VisibilityProtected-3]
}

const _Visibility_name = "nonedefaulthiddenprotected"

var _Visibility_index = [...]uint8{0, 4, 11, 17, 26}

// VisibilityFromString returns the Visibility enum corresponding to s.
func VisibilityFromString(s string) enum.Visibility {
	if len(s) == 0 {
		return 0
	}
	for i := range _Visibility_index[:len(_Visibility_index)-1] {
		if s == _Visibility_name[_Visibility_index[i]:_Visibility_index[i+1]] {
			return enum.Visibility(i)
		}
	}
	panic(fmt.Errorf("unable to locate Visibility enum corresponding to %q", s))
}
