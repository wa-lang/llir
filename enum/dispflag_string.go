// Code generated by "stringer -type DISPFlag"; DO NOT EDIT.

package enum

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DISPFlagZero-0]
	_ = x[DISPFlagVirtual-1]
	_ = x[DISPFlagPureVirtual-2]
	_ = x[DISPFlagLocalToUnit-4]
	_ = x[DISPFlagDefinition-8]
	_ = x[DISPFlagOptimized-16]
	_ = x[DISPFlagPure-32]
	_ = x[DISPFlagElemental-64]
	_ = x[DISPFlagRecursive-128]
	_ = x[DISPFlagMainSubprogram-256]
	_ = x[DISPFlagDeleted-512]
	_ = x[DISPFlagObjCDirect-2048]
	_ = x[DISPFlagNonvirtual-0]
	_ = x[DISPFlagVirtuality-3]
}

const (
	_DISPFlag_name_0 = "DISPFlagZeroDISPFlagVirtualDISPFlagPureVirtualDISPFlagVirtualityDISPFlagLocalToUnit"
	_DISPFlag_name_1 = "DISPFlagDefinition"
	_DISPFlag_name_2 = "DISPFlagOptimized"
	_DISPFlag_name_3 = "DISPFlagPure"
	_DISPFlag_name_4 = "DISPFlagElemental"
	_DISPFlag_name_5 = "DISPFlagRecursive"
	_DISPFlag_name_6 = "DISPFlagMainSubprogram"
	_DISPFlag_name_7 = "DISPFlagDeleted"
	_DISPFlag_name_8 = "DISPFlagObjCDirect"
)

var (
	_DISPFlag_index_0 = [...]uint8{0, 12, 27, 46, 64, 83}
)

func (i DISPFlag) String() string {
	switch {
	case 0 <= i && i <= 4:
		return _DISPFlag_name_0[_DISPFlag_index_0[i]:_DISPFlag_index_0[i+1]]
	case i == 8:
		return _DISPFlag_name_1
	case i == 16:
		return _DISPFlag_name_2
	case i == 32:
		return _DISPFlag_name_3
	case i == 64:
		return _DISPFlag_name_4
	case i == 128:
		return _DISPFlag_name_5
	case i == 256:
		return _DISPFlag_name_6
	case i == 512:
		return _DISPFlag_name_7
	case i == 2048:
		return _DISPFlag_name_8
	default:
		return "DISPFlag(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
