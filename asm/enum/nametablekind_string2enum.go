// Code generated by "string2enum -linecomment -type NameTableKind ../../ir/enum"; DO NOT EDIT.

package enum

import (
	"fmt"

	"github.com/llir/llvm/ir/enum"
)

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the string2enum command to generate them again.
	var x [1]struct{}
	_ = x[enum.NameTableKindDefault-0]
	_ = x[enum.NameTableKindGNU-1]
	_ = x[enum.NameTableKindNone-2]
}

const _NameTableKind_name = "DefaultGNUNone"

var _NameTableKind_index = [...]uint8{0, 7, 10, 14}

// NameTableKindFromString returns the NameTableKind enum corresponding to s.
func NameTableKindFromString(s string) enum.NameTableKind {
	if len(s) == 0 {
		return 0
	}
	for i := range _NameTableKind_index[:len(_NameTableKind_index)-1] {
		if s == _NameTableKind_name[_NameTableKind_index[i]:_NameTableKind_index[i+1]] {
			return enum.NameTableKind(i)
		}
	}
	panic(fmt.Errorf("unable to locate NameTableKind enum corresponding to %q", s))
}
