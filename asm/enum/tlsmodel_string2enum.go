// Code generated by "string2enum -linecomment -type TLSModel ../../ir/enum"; DO NOT EDIT.

package enum

import (
	"fmt"

	"github.com/llir/llvm/ir/enum"
)

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the string2enum command to generate them again.
	var x [1]struct{}
	_ = x[enum.TLSModelNone-0]
	_ = x[enum.TLSModelGeneric-1]
	_ = x[enum.TLSModelInitialExec-2]
	_ = x[enum.TLSModelLocalDynamic-3]
	_ = x[enum.TLSModelLocalExec-4]
}

const _TLSModel_name = "nonegenericinitialexeclocaldynamiclocalexec"

var _TLSModel_index = [...]uint8{0, 4, 11, 22, 34, 43}

// TLSModelFromString returns the TLSModel enum corresponding to s.
func TLSModelFromString(s string) enum.TLSModel {
	if len(s) == 0 {
		return 0
	}
	for i := range _TLSModel_index[:len(_TLSModel_index)-1] {
		if s == _TLSModel_name[_TLSModel_index[i]:_TLSModel_index[i+1]] {
			return enum.TLSModel(i)
		}
	}
	panic(fmt.Errorf("unable to locate TLSModel enum corresponding to %q", s))
}
